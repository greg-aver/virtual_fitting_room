"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from typing import Optional
from utils.logger import logger
from storage.sheets_client import sheets_client


class TokenService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    def __init__(self):
        self.initial_tokens = 10
        
    async def get_user_tokens(self, user_id: int) -> Optional[int]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        if not sheets_client.worksheet:
            logger.error("Worksheet not initialized")
            return None
            
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            existing_cell = None
            try:
                existing_cell = sheets_client.worksheet.find(str(user_id))
            except Exception:
                logger.warning(f"User {user_id} not found in sheet")
                return None
                
            if existing_cell and existing_cell.col == 1:  # –ù–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ (ID)
                row_num = existing_cell.row
                # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ F (tokens)
                tokens_cell = sheets_client.worksheet.cell(row_num, 6)  # 6 = —Å—Ç–æ–ª–±–µ—Ü F
                
                try:
                    # –ï—Å–ª–∏ —è—á–µ–π–∫–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ None, —ç—Ç–æ —Å—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –¥–∞–µ–º –µ–º—É 10 —Ç–æ–∫–µ–Ω–æ–≤
                    if tokens_cell.value is None or tokens_cell.value == "":
                        logger.info(f"User {user_id} has empty tokens field, setting to 10")
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                        sheets_client.worksheet.update_cell(row_num, 6, 10)
                        return 10
                    
                    tokens = int(tokens_cell.value)
                    logger.info(f"User {user_id} has {tokens} tokens")
                    return tokens
                except ValueError:
                    logger.error(f"Invalid tokens value for user {user_id}: {tokens_cell.value}")
                    # –î–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ç–æ–∂–µ —Å—Ç–∞–≤–∏–º 10
                    sheets_client.worksheet.update_cell(row_num, 6, 10)
                    return 10
            
            return None
            
        except Exception as e:
            logger.error(f"Failed to get tokens for user {user_id}: {e}")
            return None
    
    async def decrease_tokens(self, user_id: int) -> bool:
        """
        –£–º–µ–Ω—å—à–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            
        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        if not sheets_client.worksheet:
            logger.error("Worksheet not initialized")
            return False
            
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            existing_cell = None
            try:
                existing_cell = sheets_client.worksheet.find(str(user_id))
            except Exception:
                logger.error(f"User {user_id} not found when trying to decrease tokens")
                return False
                
            if existing_cell and existing_cell.col == 1:  # –ù–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ (ID)
                row_num = existing_cell.row
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤
                tokens_cell = sheets_client.worksheet.cell(row_num, 6)  # 6 = —Å—Ç–æ–ª–±–µ—Ü F
                
                try:
                    current_tokens = int(tokens_cell.value or 0)
                    
                    if current_tokens <= 0:
                        logger.warning(f"User {user_id} has no tokens to decrease")
                        return False
                    
                    # –£–º–µ–Ω—å—à–∞–µ–º –Ω–∞ 1
                    new_tokens = current_tokens - 1
                    sheets_client.worksheet.update_cell(row_num, 6, new_tokens)
                    
                    logger.info(f"Decreased tokens for user {user_id}: {current_tokens} -> {new_tokens}")
                    return True
                    
                except ValueError:
                    logger.error(f"Invalid tokens value for user {user_id}: {tokens_cell.value}")
                    return False
            
            return False
            
        except Exception as e:
            logger.error(f"Failed to decrease tokens for user {user_id}: {e}")
            return False
    
    async def has_tokens(self, user_id: int) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–∫–µ–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            
        Returns:
            True –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω—ã –µ—Å—Ç—å, False –µ—Å–ª–∏ –Ω–µ—Ç
        """
        tokens = await self.get_user_tokens(user_id)
        if tokens is None:
            return False
        return tokens > 0
    
    async def get_tokens_message(self, user_id: int) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            
        Returns:
            –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–∫–µ–Ω–∞—Ö
        """
        tokens = await self.get_user_tokens(user_id)
        if tokens is None:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö"
        
        if tokens == 0:
            return "‚ùå –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ç–æ–∫–µ–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!"
        
        return f"üéüÔ∏è –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–∫–µ–Ω–æ–≤: {tokens}"


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
token_service = TokenService()